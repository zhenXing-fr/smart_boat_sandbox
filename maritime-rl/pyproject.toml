[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "maritime-rl"
version = "0.1.0"
description = "Maritime Route Optimization using Reinforcement Learning"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
    { name = "Maritime AI Team" },
]

dependencies = [
    # Kafka & Data Streaming
    "confluent-kafka>=2.2.0",
    "fastavro>=1.8.0",
    "kafka-python>=2.0.2",
    "avro>=1.11.1",
    
    # Data Processing
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "scipy>=1.11.0",
    
    # Database
    "psycopg[binary]>=3.1.12",
    "sqlalchemy>=2.0.0",
    
    # Spark
    "pyspark>=3.5.0",
    "delta-spark>=2.4.0",
    
    # Reinforcement Learning
    "gymnasium>=0.28.1",
    "torch>=2.1.0",
    "stable-baselines3>=2.1.0",
    
    # Visualization
    "streamlit>=1.29.0",
    "plotly>=5.18.0",
    "folium>=0.14.0",
    "matplotlib>=3.7.0",
    
    # Utilities
    "tqdm>=4.66.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    
    # Testing
    "pytest>=7.4.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.10.0",
    "isort>=5.12.0",
    "mypy>=1.6.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
]

airflow = [
    "apache-airflow>=2.7.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ["py39"]

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
select = ["E", "F", "I"]
ignore = []
line-length = 88
target-version = "py39"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py" 